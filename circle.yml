#
# Configuration for contrib Drupal modules testing on CircleCI.
#
machine:
  php:
    version: 7.1.6
  timezone:
    Australia/Sydney
  environment:
    # Module name to test. Change to your module name.
    MODULE_NAME: $CIRCLE_PROJECT_REPONAME
    # Module's tests to run: test group or class name. Change for your module.
    MODULE_TESTS: $CIRCLE_PROJECT_REPONAME
    #
    # Other variables for build configuration. Not needed to be changed.
    #
    # Drupal release to use: drupal, drupal-7.x etc.
    DRUPAL_RELEASE: drupal-8
    # Build directories configuration.
    WEB_ROOT: $HOME/$CIRCLE_PROJECT_REPONAME/docroot
    PUBLIC_FILES_DIR: $WEB_ROOT/sites/default/files
    MODULES_PATH: $WEB_ROOT/modules/custom
    TEST_RESULTS: $CIRCLE_TEST_REPORTS
    SIMPLETEST_DIR: $HOME/$CIRCLE_PROJECT_REPONAME/src/Test
    BEHAT_CONFIG_FILE: $HOME/$CIRCLE_PROJECT_REPONAME/behat.yml
    BEHAT_SCREENSHOT_DIR: $CIRCLE_ARTIFACTS/behat
    # DB config. Using default CircleCI's database.
    DB_NAME: circle_test
    DB_USERNAME: ubuntu
    DB_PASSWORD: ""
    # Server configuration.
    SERVER: server.local
    WEB_URL: http://server.local
    WEB_USER: $(whoami)
    WEB_GROUP: www-data
    COMPOSER_GLOBAL_VENDOR: $HOME/.composer/vendor
    PATH: $COMPOSER_GLOBAL_VENDOR/bin:$PATH
    PHP_EXECUTABLE: $(which php)
    # SSH key fingerprint - used to access private repos.
    SSH_KEY_FINGERPRINT: "7b:2c:43:65:87:38:ab:de:cd:88:d7:ce:93:cc:1a:27"
  hosts:
    server.local: 127.0.0.1

dependencies:
  cache_directories:
    - ~/.composer/cache
    - ~/.composer/vendor
  pre:
    - printenv
    # Modify user to make sure that there will be no permission issues.
    - sudo usermod -a -G $WEB_GROUP $WEB_USER
    # Create $WEB_ROOT directory and set ownership and permissions.
    - |
      mkdir -p $WEB_ROOT
      sudo chmod -f 775 $WEB_ROOT
      sudo chown -R $WEB_USER:$WEB_GROUP $WEB_ROOT
      sudo chmod g+s $WEB_ROOT
    # Update default PHP settings.
    - |
      rm /opt/circleci/php/$(phpenv global)/etc/conf.d/xdebug.ini
      echo "date.timezone = Australia/Sydney" >> /opt/circleci/php/$(phpenv global)/etc/php.ini
      echo "memory_limit = -1" > /opt/circleci/php/$(phpenv global)/etc/conf.d/memory.ini
      echo 'sendmail_path = /bin/true' >> /opt/circleci/php/$(phpenv version-name)/etc/conf.d/circle.ini
    # Enable PHP7 and modules.
    - |
      echo "LoadModule php7_module /opt/circleci/php/$(phpenv global)/usr/lib/apache2/modules/libphp7.so" | sudo tee /etc/apache2/mods-available/php7.load
      sudo cp /etc/apache2/mods-available/php5.conf /etc/apache2/mods-available/php7.conf
      sudo a2dismod php5 && sudo a2enmod php7
      sudo a2enmod rewrite && sudo a2enmod proxy && sudo a2enmod proxy_http
      sudo rm -f /usr/lib/apache2/modules/libphp7.so && sudo ln -s /opt/circleci/php/$(phpenv global)/usr/lib/apache2/modules/libphp7.so /usr/lib/apache2/modules/libphp7.so
      php -i
    # Add apache config.
    - |
      echo "
      <VirtualHost *:80>
        UseCanonicalName Off
        DocumentRoot $WEB_ROOT
        ServerName $SERVER
        <Directory $WEB_ROOT>
          Options FollowSymLinks
          AllowOverride All
          RewriteEngine On
          RewriteBase /
          RewriteCond %{REQUEST_FILENAME} !-f
          RewriteCond %{REQUEST_FILENAME} !-d
          RewriteRule $WEB_ROOT/(.*)$ index.php/?q=$1 [L,QSA]
          Require all granted
        </Directory>
      </VirtualHost>" > 000-default.conf
      sudo mv -f 000-default.conf /etc/apache2/sites-available/000-default.conf
    - sudo service apache2 restart
    # Check that Apache was configured correctly.
    - echo "<?php phpinfo();" > $WEB_ROOT/info.php && curl -k -s -o info.html $WEB_URL/info.php && cat info.html | grep -aqoi "Build Date" && cat info.html && rm $WEB_ROOT/info.php && rm info.html
  override:
    # Install Drush.
    - composer global require --no-interaction drush/drush:8.*
    # Install Drupal coding standards.
    - composer global require --no-interaction drupal/coder:8.2.12
    # Install Behat extension if config file exists.
    - |
      if [ -f $BEHAT_CONFIG_FILE ] ; then
        composer global require --no-interaction drupal/drupal-extension:3.3
        composer global require --no-interaction integratedexperts/behat-screenshot
      fi
  post:
    # Download Drupal.
    - drush dl --destination="$(dirname $WEB_ROOT)" --drupal-project-rename="$(basename $WEB_ROOT)" $DRUPAL_RELEASE -y
    # Install Drupal.
    - drush --yes --root=$WEB_ROOT site-install minimal --db-url=mysql://$DB_USERNAME:$DB_PASSWORD@127.0.0.1/DB_NAME install_configure_form.update_status_module='array(FALSE,FALSE)'
    # Show information about installed Drupal.
    - drush --root=$WEB_ROOT status
    # Check that Drupal can be correctly bootstrapped.
    - drush --root=$WEB_ROOT status | grep -aqoi "Drupal bootstrap\s*:\s*Successful"
    # Install core dev dependencies.
    - cd $WEB_ROOT && composer install --dev
    # Create sites/default/files directory and set ownership and permissions.
    - mkdir -p $WEB_ROOT/sites/default/files
    - sudo chown -R $WEB_USER:$WEB_GROUP $WEB_ROOT/sites/default/files
    - sudo chmod g+s $WEB_ROOT/sites/default/files
    # Place module into correct installation location.
    - |
      # Create this module's directory.
      mkdir -p $MODULES_PATH/$MODULE_NAME
      # Copy currently checked out module into modules directory.
      git archive $(git rev-parse --abbrev-ref HEAD) | tar -x -C $MODULES_PATH/$MODULE_NAME
      # Test that current module's source was properly copied into modules dir.
      [ -d "$MODULES_PATH/$MODULE_NAME" ]
    # Include current module's composer.json into core's composer.json.
    - |
      if [ -f composer.json ]; then
        # Override SSH config to connect to private repos using shared key of deploy user.
        mkdir -p ~/.ssh/ && echo -e "Host github.com\n\tStrictHostKeyChecking no\n" > ~/.ssh/config
        SSH_KEY_FILE="${SSH_KEY_FINGERPRINT//:}" && SSH_KEY_FILE="id_${SSH_KEY_FILE//\"}" && ssh-add -D && ssh-add ~/.ssh/$SSH_KEY_FILE
        # Install tools to parse composer.json.
        sudo apt-get install jq moreutils
        # Add module's composer.json to core's composer.json and run updates.
        jq --indent 4 --arg cj "$HOME/$CIRCLE_PROJECT_REPONAME/composer.json" '.extra."merge-plugin".include += [$cj]' $WEB_ROOT/composer.json | sponge $WEB_ROOT/composer.json
        jq --indent 4 '.extra."merge-plugin"."merge-extra" = "true"' $WEB_ROOT/composer.json | sponge $WEB_ROOT/composer.json
        COMPOSER_PROJECT_NAME=$(jq --indent 4 '.name' $HOME/$CIRCLE_PROJECT_REPONAME/composer.json)
        cd $WEB_ROOT && composer update $COMPOSER_PROJECT_NAME
      fi
    # Enable current module.
    - drush --yes --root=$WEB_ROOT en $MODULE_NAME

test:
  pre:
    # Enable Simpletest testing module.
    - |
      if [ -d "$SIMPLETEST_DIR" ] ; then
        # Enable Simpletest module.
        drush --yes --root=$WEB_ROOT en simpletest
        # Clear the cache to make the module's tests discoverable.
        drush --root=$WEB_ROOT cache-clear drush
      fi

    # Download Selenium server and start in the background if Behat config is present.
    - "if [ -f $BEHAT_CONFIG_FILE ]; then curl -s -k -L http://selenium-release.storage.googleapis.com/3.5/selenium-server-standalone-3.5.3.jar -o $HOME/selenium-server.jar; fi"
    - "if [ -f $BEHAT_CONFIG_FILE ]; then java -jar $HOME/selenium-server.jar -log $CIRCLE_ARTIFACTS/selenium.log; fi":
        background: true

  override:
    # Run code linter.
    - phpcs --runtime-set installed_paths $COMPOSER_GLOBAL_VENDOR/drupal/coder/coder_sniffer --colors -s -p --standard=Drupal --extensions="css,inc,info,install,js,module,php,profile,test,theme" --ignore="*.md,*.yml" $MODULES_PATH/$MODULE_NAME
    # Run Drupal Simpletest tests, if present.
    - if [ -d "$SIMPLETEST_DIR" ] ; then php $WEB_ROOT/core/scripts/run-tests.sh --php $PHP_EXECUTABLE --url $WEB_URL --xml $TEST_RESULTS "$MODULE_TESTS"; fi
    # Run Behat tests if config is present.
    - "if [ -f $BEHAT_CONFIG_FILE ]; then cd $HOME/$CIRCLE_PROJECT_REPONAME && behat --colors || behat --colors --rerun; fi"
